name: Dockerizing to Amazon ECR

on:
  push:
    branches:
      - main

env:
  AWS_REGION: ap-northeast-2                   # set this to your preferred AWS region, e.g. us-west-1
  ECR_REPOSITORY: jinwoo # set this to your Amazon ECR repository name

#  ECS_SERVICE: MY_ECS_SERVICE                 # set this to your Amazon ECS service name
#  ECS_CLUSTER: MY_ECS_CLUSTER                 # set this to your Amazon ECS cluster name
#  ECS_TASK_DEFINITION: MY_ECS_TASK_DEFINITION # set this to the path to your Amazon ECS task definition
#                                               # file, e.g. .aws/task-definition.json
#  CONTAINER_NAME: MY_CONTAINER_NAME           # set this to the name of the container in the
#                                               # containerDefinitions section of your task definition

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        
        role-to-assume: "arn:aws:iam::453684226558:role/gha_oidc_assume_role"
        role-session-name: samplerolesession
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        # Build a docker container and
        # push it to ECR so that it can
        # be deployed to ECS.
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:${IMAGE_TAG:0:10} -f ./deploy/Dockerfile .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:${IMAGE_TAG:0:10}
        # 왜 아웃풋을 설정해서 질문을 받게 만들어 어?
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:${IMAGE_TAG:0:10}"
